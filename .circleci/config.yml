---
defaults:
  updatinator_container: &updatinator_container
    working_directory: /updatinator

version: 2
jobs:
  test:
    <<: *updatinator_container
    docker:
      - image: quay.io/pantheon-public/docker-updatinator:3.x
      - image: cimg/mysql:5.7.36
      - image: us-docker.pkg.dev/pantheon-artifacts/internal/pvault:latest
    steps:
      - checkout
      - run:
          name: "Vault Login"
          command: |
            VAULT_TOKEN=$(pvault production write -field=token auth/jwt-circleci/login role=circleci jwt=$CIRCLE_OIDC_TOKEN)
            echo "export VAULT_TOKEN=$VAULT_TOKEN" >> $BASH_ENV
            echo "export PRODUCTION_VAULT_TOKEN=$VAULT_TOKEN" >> $BASH_ENV
      - run: composer install
      - run: git config --global user.email "bot@getpantheon.com"
      - run: git config --global user.name "Pantheon Automation"
      - run: ./update-tool whoami
      - run: which pvault
      - run: composer phar:build
      - persist_to_workspace:
          root: /updatinator
          paths:
            - update-tool.phar
      - run: composer test
  publish_phar:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$CIRCLE_TAG
            which pvault
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/update-tool.phar

workflows:
  version: 2
  push:
    jobs:
      - test:
          context:
            - gcp-credentials-ar-ci
          filters:
            tags:
              only: /.*/
      - publish_phar:
          context:
            - gcp-credentials-ar-ci
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
